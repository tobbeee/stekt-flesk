apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 55.5.0   # check latest
    helm:
      releaseName: monitoring
      values: |
        grafana:
          enabled: true
          admin:
            existingSecret: grafana-admin-credentials
            userKey: admin-user
            passwordKey: admin-password
          service:
            type: LoadBalancer
        prometheus:
          prometheusSpec:
            retention: 10d
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: batch/v1
kind: Job
metadata:
  name: grafana-secret-generator
  namespace: monitoring
spec:
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: secret-generator
          image: bitnami/kubectl:latest
          command:
            - /bin/sh
            - -c
            - |
              if ! kubectl get secret grafana-admin-credentials -n monitoring >/dev/null 2>&1; then
                PASSWORD=$(openssl rand -base64 20)
                kubectl create secret generic grafana-admin-credentials \
                  -n monitoring \
                  --from-literal=admin-user=admin \
                  --from-literal=admin-password=$PASSWORD
              else
                echo "Secret already exists, skipping."
              fi

